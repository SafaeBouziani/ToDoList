apiVersion: apps/v1
kind: Deployment
metadata: 
  namespace: three-tier
  name: mongodb
  labels:
    app: mongodb
    tier: database
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels: 
        app: mongodb
        tier: database
    spec:
      # Retirer temporairement le securityContext strict pour debugging
      containers:
      - name: mongodb
        image: mongo:6.0
        imagePullPolicy: IfNotPresent
        
        ports:
        - containerPort: 27017
          name: mongodb
          protocol: TCP
        
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-sec
                key: username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-sec
                key: password
          - name: MONGO_INITDB_DATABASE
            valueFrom:
              configMapKeyRef:
                name: mongodb-config
                key: MONGO_INITDB_DATABASE
        
        # Commande pour éviter le fork et bind sur toutes les interfaces
        command:
          - "mongod"
          - "--bind_ip_all"
          - "--port"
          - "27017"
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Probes simplifiées
        livenessProbe:
          exec:
            command:
              - mongosh
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
              - mongosh
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        volumeMounts:
          - name: mongo-volume
            mountPath: /data/db
      
      volumes: 
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-volume-claim